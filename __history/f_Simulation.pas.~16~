unit f_Simulation;

interface

uses
  System.SysUtils, System.Types, System.UITypes, System.Classes, System.Variants,
  FMX.Types, FMX.Controls, FMX.Forms, FMX.Graphics, FMX.Dialogs, FMX.Viewport3D,
  System.Math.Vectors, FMX.Controls3D, FMX.Types3D, FMX.Objects3D;

type
  TfSimulation = class(TForm)
    Viewport3D: TViewport3D;
    Camera: TCamera;
    Light: TLight;
    Model3D: TModel3D;
    Sphere: TSphere;
  private
    { Private declarations }
  public
    { Public declarations }
    procedure LoadGCode(GCode: TStringList);
  end;

var
  fSimulation: TfSimulation;

implementation

{$R *.fmx}
{$R *.Windows.fmx MSWINDOWS}


procedure TfSimulation.LoadGCode(GCode: TStringList);
begin
  ParseGCodeToViewport(GCode, Viewport3D);
end;

procedure TfSimulation.ParseGCodeToViewport(GCode: TStringList; Viewport: TViewport3D);
var
  i: Integer;
  Line: string;
  X, Y, Z: Single;
  LastX, LastY, LastZ: Single;
  Line3D: TLine3D;
begin
  // Начальная позиция
  LastX := 0;
  LastY := 0;
  LastZ := 0;

  for i := 0 to GCode.Count - 1 do
  begin
    Line := Trim(GCode[i]);

    // Пропускаем комментарии и пустые строки
    if (Line = '') or (Line[1] = ';') then
      Continue;

    // Пример обработки команды G0 или G1
    if Line.StartsWith('G0') or Line.StartsWith('G1') then
    begin
      X := LastX;
      Y := LastY;
      Z := LastZ;

      // Извлекаем координаты из строки
      if Pos('X', Line) > 0 then
        X := StrToFloatDef(Copy(Line, Pos('X', Line) + 1, 10), LastX);
      if Pos('Y', Line) > 0 then
        Y := StrToFloatDef(Copy(Line, Pos('Y', Line) + 1, 10), LastY);
      if Pos('Z', Line) > 0 then
        Z := StrToFloatDef(Copy(Line, Pos('Z', Line) + 1, 10), LastZ);

      // Создаем линию в Viewport3D
      Line3D := TLine3D.Create(Viewport);
      Line3D.Parent := Viewport;
      Line3D.MaterialSource := nil; // Можно назначить цвет линии
      Line3D.StartPoint := Point3D(LastX, LastY, LastZ);
      Line3D.EndPoint := Point3D(X, Y, Z);
      Line3D.Thickness := 0.5;

      // Обновляем последнюю позицию
      LastX := X;
      LastY := Y;
      LastZ := Z;
    end;
  end;
end;


end.
