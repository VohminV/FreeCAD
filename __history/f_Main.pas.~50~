unit f_Main;

interface

uses
  System.SysUtils, System.Types, System.UITypes, System.Classes, System.Variants,
  FMX.Types, FMX.Controls, FMX.Forms, FMX.Graphics, FMX.Dialogs,
  FMX.Controls.Presentation, FMX.StdCtrls, FMX.Memo.Types, FMX.ScrollBox,
  FMX.Memo, f_Simulation;

type
  TfMain = class(TForm)
    ProgressBar: TProgressBar;
    MemoGCode: TMemo;
    Panel1: TPanel;
    SaveGCode: TButton;
    LoadGCode: TButton;
    OpenDialogGCode: TOpenDialog;
    btnOpenSimulation: TButton;
    procedure LoadGCodeClick(Sender: TObject);
    procedure SaveGCodeClick(Sender: TObject);
    procedure btnOpenSimulationClick(Sender: TObject);
  private
    { Private declarations }
  public
    { Public declarations }
  end;

var
  fMain: TfMain;

implementation

{$R *.fmx}
{$R *.Windows.fmx MSWINDOWS}

procedure TfMain.btnOpenSimulationClick(Sender: TObject);
var
  SimulationForm: TfSimulation;
  GCode: TStringList;
begin
  GCode := TStringList.Create;
  try
    // Assign the memo's lines to the TStringList
    GCode.Assign(MemoGCode.Lines);

    // Now you can use GCode as a TStringList (e.g., pass it to LoadGCode)
    SimulationForm.LoadGCode(GCode);

  finally
    GCode.Free;
  end;
end;

procedure TfMain.LofMaindeClick(Sender: TObject);
var
  GCodeFile: TStringList;
  FilteredGCode: TStringList;
  i: Integer;
  Line: string;
begin
  OpenDialogGCode.Filter := 'G-Code Files (*.gcode;*.nc)|*.gcode;*.nc|All Files (*.*)|*.*';
  ProgressBar.Min:=0;
  if OpenDialogGCode.Execute then
  begin
    GCodeFile := TStringList.Create;
    FilteredGCode := TStringList.Create;
    try
      GCodeFile.LoadFromFile(OpenDialogGCode.FileName);
      ProgressBar.Max:= GCodeFile.Count;
      for i := 0 to GCodeFile.Count - 1 do
      begin
        Line := Trim(GCodeFile[i]);
        if (Line = '') or (Line[1] = ';') then
          Continue;
        if Pos(';', Line) > 0 then
          Line := Trim(Copy(Line, 1, Pos(';', Line) - 1));
        if Line <> '' then
          FilteredGCode.Add(Line);
        ProgressBar.Value:= ProgressBar.Value+1;
      end;
      MemoGCode.Lines := FilteredGCode;
      ShowMessage('Файл успешно загружен и очищен от комментариев.');
      ProgressBar.Value:= ProgressBar.Value+1;
    except
      on E: Exception do
        ShowMessage('Ошибка: ' + E.Message);
    end;
    GCodeFile.Free;
    FilteredGCode.Free;
  end;

end;


procedure TfMain.SafMaindeClick(Sender: TObject);
begin
  OpenDialogGCode.Filter := 'G-Code Files (*.gcode;*.nc)|*.gcode;*.nc|All Files (*.*)|*.*';

  if OpenDialogGCode.Execute then
  begin
    try
      MemoGCode.Lines.SaveToFile(OpenDialogGCode.FileName);
      ShowMessage('Файл G-кода успешно сохранён в ' + OpenDialogGCode.FileName);
    except
      on E: Exception do
        ShowMessage('Ошибка при сохранении файла: ' + E.Message);
    end;
  end;
end;

end.
